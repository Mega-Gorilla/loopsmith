<task>
技術ドキュメントの評価を行います。

<context>
評価対象ファイル: {{document_path}}
このファイルが実装準備として十分な品質かを判定します。
</context>

<constraints>
- ファイルの読み取りのみ可能（修正・作成・削除は禁止）
- 文字エンコーディングの警告や表示上の文字化けは無視してください
  （内容が理解できる範囲であれば、フォーマットの問題として扱わない）
</constraints>

<process>
以下のアプローチで評価を進めてください：

1. 対象ファイルを読み込み、ドキュメントの種類と目的を理解する
2. 必要に応じて関連ファイルやプロジェクト構造を確認する
3. 不明な点や最新情報が必要な場合は、外部リソースを活用する
   （Web検索、公式ドキュメント、GitHub、Stack Overflow等）
4. ドキュメントの性質に応じた評価基準を設定し、段階的に分析する
</process>

<evaluation_criteria>
実装準備の完成度を評価する際、最低限以下の観点を含めてください：

【必須評価項目】
- 実装可能性：現実的に実装できるか
- 技術的妥当性：アプローチや技術選定が適切か
- 情報の充足性：実装に必要な詳細が記載されているか

【文脈に応じた追加評価】
ドキュメントの内容と目的から判断して、重要な評価観点を自律的に追加してください。

例えば：
- API設計書なら → エンドポイント設計、認証方式、エラーハンドリング
- アーキテクチャ設計なら → スケーラビリティ、保守性、技術的負債
- セキュリティ関連なら → 脅威分析、対策の妥当性、コンプライアンス
- パフォーマンス重視なら → 負荷想定、ボトルネック分析、最適化戦略
- 複数案の比較なら → 各案のトレードオフ、推奨案とその根拠

技術者として重要だと判断する観点があれば、それらも含めて総合的に評価してください。
</evaluation_criteria>

<output_format>
評価結果を以下のJSON形式で出力してください：

{
  "ready_for_implementation": boolean,
  "score": number (0-10),
  "conclusion": string,
  "rationale": string,
  "analysis": {
    "strengths": array,
    "weaknesses": array,
    "technical_assessment": string,
    "recommended_approach": string|null
  },
  "recommendations": array|null,
  "blockers": array|null,
  "rubric_scores": {
    "completeness": number (0-10),
    "accuracy": number (0-10),
    "clarity": number (0-10),
    "usability": number (0-10)
  }
}

注：すべてのフィールドを含め、該当なしはnullで表現してください。
</output_format>
</task>